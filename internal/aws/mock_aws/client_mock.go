// Code generated by MockGen. DO NOT EDIT.
// Source: humanitec.io/resources/driver-aws-external/internal/aws (interfaces: Client)

// Package mock_aws is a generated GoMock package.
package mock_aws

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// CreateBucket mocks base method
func (m *MockClient) CreateBucket(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBucket", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBucket indicates an expected call of CreateBucket
func (mr *MockClientMockRecorder) CreateBucket(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBucket", reflect.TypeOf((*MockClient)(nil).CreateBucket), arg0)
}

// CreateElastiCacheRedis mocks base method
func (m *MockClient) CreateElastiCacheRedis(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateElastiCacheRedis", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateElastiCacheRedis indicates an expected call of CreateElastiCacheRedis
func (mr *MockClientMockRecorder) CreateElastiCacheRedis(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateElastiCacheRedis", reflect.TypeOf((*MockClient)(nil).CreateElastiCacheRedis), arg0, arg1, arg2)
}

// DeleteBucket mocks base method
func (m *MockClient) DeleteBucket(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBucket", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBucket indicates an expected call of DeleteBucket
func (mr *MockClientMockRecorder) DeleteBucket(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBucket", reflect.TypeOf((*MockClient)(nil).DeleteBucket), arg0)
}

// DeleteElastiCacheRedis mocks base method
func (m *MockClient) DeleteElastiCacheRedis(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteElastiCacheRedis", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteElastiCacheRedis indicates an expected call of DeleteElastiCacheRedis
func (mr *MockClientMockRecorder) DeleteElastiCacheRedis(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElastiCacheRedis", reflect.TypeOf((*MockClient)(nil).DeleteElastiCacheRedis), arg0)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: humanitec.io/resources/driver-aws-external/internal/model (interfaces: Modeler)

// Package mock_model is a generated GoMock package.
package mock_model

import (
	gomock "github.com/golang/mock/gomock"
	model "humanitec.io/resources/driver-aws-external/internal/model"
	reflect "reflect"
	time "time"
)

// MockModeler is a mock of Modeler interface
type MockModeler struct {
	ctrl     *gomock.Controller
	recorder *MockModelerMockRecorder
}

// MockModelerMockRecorder is the mock recorder for MockModeler
type MockModelerMockRecorder struct {
	mock *MockModeler
}

// NewMockModeler creates a new mock instance
func NewMockModeler(ctrl *gomock.Controller) *MockModeler {
	mock := &MockModeler{ctrl: ctrl}
	mock.recorder = &MockModelerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockModeler) EXPECT() *MockModelerMockRecorder {
	return m.recorder
}

// DeleteResourceMetadata mocks base method
func (m *MockModeler) DeleteResourceMetadata(arg0 string, arg1 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteResourceMetadata", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteResourceMetadata indicates an expected call of DeleteResourceMetadata
func (mr *MockModelerMockRecorder) DeleteResourceMetadata(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteResourceMetadata", reflect.TypeOf((*MockModeler)(nil).DeleteResourceMetadata), arg0, arg1)
}

// InsertOrUpdateResourceMetadata mocks base method
func (m *MockModeler) InsertOrUpdateResourceMetadata(arg0 model.ResourceMetadata) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertOrUpdateResourceMetadata", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertOrUpdateResourceMetadata indicates an expected call of InsertOrUpdateResourceMetadata
func (mr *MockModelerMockRecorder) InsertOrUpdateResourceMetadata(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertOrUpdateResourceMetadata", reflect.TypeOf((*MockModeler)(nil).InsertOrUpdateResourceMetadata), arg0)
}

// SelectResourceMetadata mocks base method
func (m *MockModeler) SelectResourceMetadata(arg0 string) (model.ResourceMetadata, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectResourceMetadata", arg0)
	ret0, _ := ret[0].(model.ResourceMetadata)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// SelectResourceMetadata indicates an expected call of SelectResourceMetadata
func (mr *MockModelerMockRecorder) SelectResourceMetadata(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectResourceMetadata", reflect.TypeOf((*MockModeler)(nil).SelectResourceMetadata), arg0)
}
